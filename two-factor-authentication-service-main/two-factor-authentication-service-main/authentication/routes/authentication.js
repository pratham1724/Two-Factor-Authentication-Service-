import express from 'express';
import speakeasy from 'speakeasy';
import Authentication from '../models/authentication.js';
const router = express.Router();

router.get('/', async(req, res) => {
    try{
       const authentications = await Authentication.find()
       res.json(authentications);
    }catch(err){
        res.send('Error' + err)
    }
});

// Generate key for user
router.get('/generateKey', async(req, res) => {
    try{
       var secret = speakeasy.generateSecret();
       res.json(secret);
    }catch(err){
        res.send('Error' + err)
    }
});


// Generate TOTP from given key
router.post('/generateToken', async(req, res) => {
    try{
       var token = speakeasy.totp({
            secret: req.body.key,
            encoding: 'base32'
          });
        res.send(token);
    }catch(err){
        res.send('Error' + err)
    }
});

// Verify user entered token with token generated by key stored on cloud
router.post('/verifyToken', async(req, res) => {
    try{ 
       let token = req.body.token; 
       var data = {email : req.body.email};
       let user;
       const accounts = await Authentication.find();
       for(let account of accounts){
           if(account.email === req.body.email){
               user = account;
               break;
           }
       }
       if(user){
           var verified = speakeasy.totp.verify({ secret: user.key,
            encoding: 'base32',
            token: token });
            if(verified){
                res.send(true);
            }
            else{
                res.send(false);
            }
            res.json(user);
       }
       else{
        res.send('Error' + 'User Not Found'); 
       }

    }catch(err){
        res.send('Error' + err)
    }
});

// To store User : key pair in Cloud database
router.post('/registerService', async(req, res) => {
    try{
        // var secret = speakeasy.generateSecret();
        const authentication = new Authentication({ 
            email : req.body.email, 
            key : req.body.key 
        })
        try{
            const tempobj = await authentication.save();
            res.send(tempobj);
        }catch(err){
            res.send('Error')
        }
        
    }catch(err){
        res.send('Error' + err)
    }
});

export default router;